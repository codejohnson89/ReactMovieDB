{"version":3,"sources":["components/modules/Poster.js","components/modules/Results.js","components/Home.js","components/modules/Header.js","components/modules/Footer.js","firebase.js","components/Contact.js","components/Tvshows.js","App.js","serviceWorker.js","index.js"],"names":["Poster","props","Card","style","width","Img","variant","src","image","Body","Title","title","Text","rating","Footer","Button","Results","Col","md","sm","CardDeck","img","text","date","Home","useState","movieData","setMovieData","setBaseURL","searchBar","setSearchBar","searchResults","setSearchResults","noSearch","setNoSearch","useEffect","Axios","get","then","res","data","results","catch","err","console","log","className","Form","inline","onSubmit","e","preventDefault","Group","controlId","Control","type","placeholder","value","onChange","target","Container","Row","map","movie","key","id","backdrop_path","vote_average","search","release_date","original_title","Header","Navbar","bg","Nav","Item","Link","exact","to","fixed","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Contact","validated","setValidated","firstName","setFirstName","lastName","setLastName","email","setEmail","comments","setComments","noValidate","currentTarget","checkValidity","stopPropagation","firestore","collection","add","Label","Tvshows","class","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"uRAGe,SAASA,EAAOC,GAC3B,OACI,kBAACC,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,UAClB,kBAACF,EAAA,EAAKG,IAAN,CAAUC,QAAQ,MAAMC,IAAG,wCAAmCN,EAAMO,SACpE,kBAACN,EAAA,EAAKO,KAAN,KACI,kBAACP,EAAA,EAAKQ,MAAN,KAAaT,EAAMU,OACnB,kBAACT,EAAA,EAAKU,KAAN,eAAmBX,EAAMY,OAAzB,UAEJ,kBAACX,EAAA,EAAKY,OAAN,KACA,kBAACC,EAAA,EAAD,CAAQT,QAAQ,WAAhB,kB,aCTG,SAASU,EAAQf,GAC5B,OACI,kBAACgB,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GACZ,kBAACC,EAAA,EAAD,KACI,kBAAClB,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKG,IAAN,CAAUC,QAAQ,MAAMC,IAAKN,EAAMoB,MACnC,kBAACnB,EAAA,EAAKQ,MAAN,KAAaT,EAAMqB,KAAK,6BAAUrB,EAAMsB,SCyD7CC,MA1Df,WAAiB,IAAD,EACsBC,mBAAS,IAD/B,mBACLC,EADK,KACMC,EADN,OAEkBF,mBAAS,IAF3B,mBAEIG,GAFJ,aAGsBH,mBAAS,IAH/B,mBAGLI,EAHK,KAGMC,EAHN,OAI8BL,mBAAS,IAJvC,mBAILM,EAJK,KAIUC,EAJV,OAKoBP,oBAAS,GAL7B,mBAKLQ,EALK,KAKKC,EALL,KAkCZ,OA3BAC,qBAAU,WACNC,IAAMC,IAAI,8KACTC,MAAK,SAACC,GAAD,OAASZ,EAAaY,EAAIC,KAAKC,YACpCC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,SACvB,IAEHV,qBAAU,WACNC,IAAMC,IAAI,uFACLC,MAAK,SAACC,GAAD,OAASX,EAAWW,EAAIC,WACnC,IAmBC,6BACA,yBAAKM,UAAU,6BACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,aAAd,oCACA,kBAACC,EAAA,EAAD,CAAMC,QAAQ,EAAOC,SAhBjC,SAAsBC,GAClBA,EAAEC,iBACFf,IAAMC,IAAN,kHAAqHR,EAArH,gCACKS,MAAK,SAACC,GACHP,EAAiBO,EAAIC,KAAKC,SAC1BP,GAAaD,QAYL,kBAACc,EAAA,EAAKK,MAAN,CAAYC,UAAU,aAClB,kBAACN,EAAA,EAAKO,QAAN,CAAcC,KAAK,QAAQC,YAAY,iCAAiCC,MAAO5B,EAAW6B,SAvBlH,SAAsBR,GAClBA,EAAEC,iBACFrB,EAAaoB,EAAES,OAAOF,UAsBF,kBAACV,EAAA,EAAKO,QAAN,CAAcC,KAAK,SAASC,YAAY,eAKxD,kBAACI,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,MACO5B,GAAYP,EAAUoC,KAAI,SAACC,GAAD,OAAW,kBAAC9C,EAAA,EAAD,CAAKE,GAAI,GAAID,GAAI,GAC7C,kBAAClB,EAAD,CAAQgE,IAAKD,EAAME,GAAIzD,MAAOuD,EAAMG,cAAevD,MAAOoD,EAAMpD,MAAOE,OAAQkD,EAAMI,oBACxEpC,EAAc+B,KAAI,SAACM,GAAD,OAAY,kBAACpD,EAAD,CAASgD,IAAKI,EAAOH,GAAI1C,KAAM6C,EAAOC,aAAc/C,KAAM8C,EAAOE,eAAgBjD,IAAG,wCAAmC+C,EAAOF,wB,kBCvD1L,SAASK,IACpB,OACQ,kBAACC,EAAA,EAAD,CAAQC,GAAG,OAAOnE,QAAQ,QACtB,kBAACsD,EAAA,EAAD,KACI,kBAACc,EAAA,EAAD,KACI,kBAACA,EAAA,EAAIC,KAAL,KACI,kBAACD,EAAA,EAAIE,KAAL,KACI,kBAAC,IAAD,CAAMC,OAAK,EAACC,GAAG,KAAf,YAGR,kBAACJ,EAAA,EAAIC,KAAL,KACI,kBAACD,EAAA,EAAIE,KAAL,KACI,kBAAC,IAAD,CAAMC,OAAK,EAACC,GAAG,YAAf,cAGR,kBAACJ,EAAA,EAAIC,KAAL,KACI,kBAACD,EAAA,EAAIE,KAAL,KACI,kBAAC,IAAD,CAAMC,OAAK,EAACC,GAAG,YAAf,gBClBjB,SAAShE,IACpB,OACI,gCACI,kBAAC0D,EAAA,EAAD,CAAQC,GAAG,OAAOnE,QAAQ,OAAOyE,MAAM,UAAS,oE,4BCS1DC,IAASC,cAXY,CACrBC,OAAQ,0CACRC,WAAY,uCACZC,YAAa,8CACbC,UAAW,uBACXC,cAAe,mCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKAT,QAAf,ECZa,SAASU,IAAW,IAAD,EAEIjE,oBAAS,GAFb,mBAEvBkE,EAFuB,KAEZC,EAFY,OAGInE,mBAAS,IAHb,mBAGvBoE,EAHuB,KAGZC,EAHY,OAIErE,mBAAS,IAJX,mBAIvBsE,EAJuB,KAIbC,EAJa,OAKJvE,mBAAS,IALL,mBAKvBwE,EALuB,KAKhBC,EALgB,OAMEzE,mBAAS,IANX,mBAMvB0E,EANuB,KAMbC,EANa,KAkC9B,OACI,kBAACxC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKf,UAAU,gBACX,kBAAC7B,EAAA,EAAD,CAAKE,GAAI,IACT,yDACA,mEACI,kBAAC4B,EAAA,EAAD,CAAMsD,YAAU,EAACV,UAAWA,EAAW1C,SAhClC,SAAAC,IAEY,IADhBA,EAAEoD,cACNC,kBACPrD,EAAEC,iBACFD,EAAEsD,mBAGJZ,GAAa,GACbhD,QAAQC,IAAIgD,EAAWE,EAAUE,EAAOE,GACxCnB,EACCyB,YACAC,WAAW,2BACPC,IAAI,CACDd,YACAE,WACAE,QACAE,aAEH7D,MAAK,WACFwD,EAAa,IACbE,EAAY,IACZE,EAAS,IACTE,EAAY,SAWJ,kBAACrD,EAAA,EAAKK,MAAN,CAAYC,UAAU,iBACtB,kBAACN,EAAA,EAAK6D,MAAN,mBACA,kBAAC7D,EAAA,EAAKO,QAAN,CAAcC,KAAK,QAAQC,YAAY,aAAaC,MAAOoC,EAAWnC,SAAU,SAAAR,GAAC,OAAI4C,EAAa5C,EAAEoD,cAAc7C,WAElH,kBAACV,EAAA,EAAKK,MAAN,CAAYC,UAAU,gBACtB,kBAACN,EAAA,EAAK6D,MAAN,kBACA,kBAAC7D,EAAA,EAAKO,QAAN,CAAcC,KAAK,QAAQC,YAAY,YAAYC,MAAOsC,EAAUrC,SAAU,SAAAR,GAAC,OAAI8C,EAAY9C,EAAEoD,cAAc7C,WAE/G,kBAACV,EAAA,EAAKK,MAAN,CAAYC,UAAU,aACtB,kBAACN,EAAA,EAAK6D,MAAN,sBACA,kBAAC7D,EAAA,EAAKO,QAAN,CAAcC,KAAK,QAAQC,YAAY,cAAcC,MAAOwC,EAAOvC,SAAU,SAAAR,GAAC,OAAIgD,EAAShD,EAAEoD,cAAc7C,WAE3G,kBAACV,EAAA,EAAKK,MAAN,CAAYC,UAAU,YACtB,kBAACN,EAAA,EAAK6D,MAAN,iBACA,kBAAC7D,EAAA,EAAKO,QAAN,CAAcC,KAAK,WAAWC,YAAY,oBAAoBC,MAAO0C,EAAUzC,SAAU,SAAAR,GAAC,OAAIkD,EAAYlD,EAAEoD,cAAc7C,WAE1H,kBAAC1C,EAAA,EAAD,CAAQT,QAAQ,UAAUiD,KAAK,UAA/B,c,OCITsD,MA1Df,WAAoB,IAAD,EACmBpF,mBAAS,IAD5B,mBACRC,EADQ,KACGC,EADH,OAEeF,mBAAS,IAFxB,mBAECG,GAFD,aAGmBH,mBAAS,IAH5B,mBAGRI,EAHQ,KAGGC,EAHH,OAI2BL,mBAAS,IAJpC,mBAIRM,EAJQ,KAIOC,EAJP,OAKiBP,oBAAS,GAL1B,mBAKRQ,EALQ,KAKEC,EALF,KAkCf,OA3BAC,qBAAU,WACNC,IAAMC,IAAI,kMACTC,MAAK,SAACC,GAAD,OAASZ,EAAaY,EAAIC,KAAKC,YACpCC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,SACvB,IAEHV,qBAAU,WACNC,IAAMC,IAAI,uFACLC,MAAK,SAACC,GAAD,OAASX,EAAWW,EAAIC,WACnC,IAmBC,6BACA,yBAAKsE,MAAM,6BACP,yBAAKA,MAAM,aACP,wBAAIA,MAAM,aAAV,oCACA,kBAAC/D,EAAA,EAAD,CAAMC,QAAQ,EAAOC,SAhBjC,SAAsBC,GAClBA,EAAEC,iBACFf,IAAMC,IAAN,kHAAqHR,EAArH,gCACKS,MAAK,SAACC,GACHP,EAAiBO,EAAIC,KAAKC,SAC1BP,GAAaD,QAYL,kBAACc,EAAA,EAAKK,MAAN,CAAYC,UAAU,aAClB,kBAACN,EAAA,EAAKO,QAAN,CAAcC,KAAK,QAAQC,YAAY,iCAAiCC,MAAO5B,EAAW6B,SAvBlH,SAAsBR,GAClBA,EAAEC,iBACFrB,EAAaoB,EAAES,OAAOF,UAsBF,kBAACV,EAAA,EAAKO,QAAN,CAAcC,KAAK,SAASC,YAAY,eAKxD,kBAACI,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,MACO5B,GAAYP,EAAUoC,KAAI,SAACC,GAAD,OAAW,kBAAC9C,EAAA,EAAD,CAAKE,GAAI,GAAID,GAAI,GAC7C,kBAAClB,EAAD,CAAQQ,MAAOuD,EAAMG,cAAevD,MAAOoD,EAAMpD,MAAOE,OAAQkD,EAAMI,oBACzDpC,EAAc+B,KAAI,SAACM,GAAD,OAAY,kBAACpD,EAAD,CAASO,KAAM6C,EAAOC,aAAc/C,KAAM8C,EAAOE,eAAgBjD,IAAG,wCAAmC+C,EAAOF,wBChC1K6C,MAff,WACE,OACE,kBAAC,IAAD,KACA,kBAACxC,EAAD,MACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOyC,KAAK,IAAInC,OAAK,EAACoC,UAAWzF,IACjC,kBAAC,IAAD,CAAOwF,KAAK,WAAWnC,OAAK,EAACoC,UAAWJ,IACxC,kBAAC,IAAD,CAAOG,KAAK,WAAWnC,OAAK,EAACoC,UAAWvB,IACxC,kBAAC,IAAD,CAAOsB,KAAK,WAAWnC,OAAK,EAACoC,UAAWjG,KAE1C,kBAACF,EAAD,QCVcoG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvF,MAAK,SAAAwF,GACJA,EAAaC,gBAEdrF,OAAM,SAAAsF,GACLpF,QAAQoF,MAAMA,EAAMC,a","file":"static/js/main.39a9afb8.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Card, Button } from 'react-bootstrap';\r\n\r\nexport default function Poster(props) {\r\n    return (\r\n        <Card style={{ width: '18rem' }}>\r\n            <Card.Img variant=\"top\" src={`http://image.tmdb.org/t/p/w342${props.image}`} />\r\n            <Card.Body>\r\n                <Card.Title>{props.title}</Card.Title>\r\n                <Card.Text>Score: {props.rating} / 10</Card.Text>                \r\n            </Card.Body>\r\n            <Card.Footer>\r\n            <Button variant=\"primary\">Go somewhere</Button>\r\n            </Card.Footer>\r\n        </Card>\r\n    )\r\n}","import React from 'react';\r\nimport { Card, CardDeck, Col } from 'react-bootstrap';\r\n\r\nexport default function Results(props) {\r\n    return (\r\n        <Col md={4} sm={6}>\r\n            <CardDeck>\r\n                <Card>\r\n                    <Card.Img variant=\"top\" src={props.img}/>\r\n                    <Card.Title>{props.text}<br></br>{props.date}</Card.Title>\r\n                </Card>\r\n            </CardDeck>\r\n        </Col>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Axios from 'axios';\r\nimport { Container, Row, Col, Form } from 'react-bootstrap';\r\n\r\nimport Poster from './modules/Poster';\r\nimport Results from './modules/Results';\r\n\r\n\r\nfunction Home() {\r\n    const [movieData, setMovieData] = useState([]);\r\n    const [baseURL, setBaseURL] = useState([]);\r\n    const [searchBar, setSearchBar] = useState('');\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [noSearch, setNoSearch] = useState(false);\r\n\r\n    useEffect(() => {\r\n        Axios.get('https://api.themoviedb.org/3/discover/movie?api_key=ae6887d6afcef7f295ee5ce27afa2389&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1')\r\n        .then((res) => setMovieData(res.data.results))\r\n        .catch(err => console.log)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        Axios.get('https://api.themoviedb.org/3/configuration?api_key=ae6887d6afcef7f295ee5ce27afa2389')\r\n            .then((res) => setBaseURL(res.data))\r\n    }, [])\r\n\r\n    function handleChange(e) {\r\n        e.preventDefault()\r\n        setSearchBar(e.target.value);\r\n    }\r\n\r\n    function submitSearch(e) {\r\n        e.preventDefault()\r\n        Axios.get(`https://api.themoviedb.org/3/search/movie?api_key=ae6887d6afcef7f295ee5ce27afa2389&language=en-US&query=${searchBar}&page=1&include_adult=false`)\r\n            .then((res) => {\r\n                setSearchResults(res.data.results)\r\n                setNoSearch(!noSearch)\r\n            })\r\n        // console.log(searchBarResult)\r\n    }\r\n\r\n    // console.log(movieData)\r\n    return (\r\n        <div>\r\n        <div className=\"jumbotron jumbotron-fluid\">\r\n            <div className=\"container\">\r\n                <h1 className=\"display-4\">Search for your favorite movies!</h1>\r\n                <Form inline={true}  onSubmit={submitSearch}>\r\n                        <Form.Group controlId=\"searchbar\">\r\n                            <Form.Control type=\"input\" placeholder=\"Search movies or TV shows.....\" value={searchBar} onChange={handleChange} />\r\n                            <Form.Control type=\"submit\" placeholder=\"Submit\"/>\r\n                        </Form.Group>\r\n                    </Form>\r\n            </div>\r\n        </div>\r\n            <Container>\r\n                <Row>\r\n                    {(!noSearch && movieData.map((movie) => <Col sm={12} md={4}>\r\n                                <Poster key={movie.id} image={movie.backdrop_path} title={movie.title} rating={movie.vote_average}/>\r\n                                </Col>)) || (searchResults.map((search) => <Results key={search.id} date={search.release_date} text={search.original_title} img={`http://image.tmdb.org/t/p/w500${search.backdrop_path}`}/>))}\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Container, Nav, Navbar } from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default function Header() {\r\n    return (\r\n            <Navbar bg=\"dark\" variant=\"dark\">\r\n                <Container>\r\n                    <Nav>\r\n                        <Nav.Item>\r\n                            <Nav.Link>\r\n                                <Link exact to=\"/\">Movies</Link>\r\n                            </Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <Nav.Link>\r\n                                <Link exact to=\"/tvshows\">TV Shows</Link>\r\n                            </Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <Nav.Link>\r\n                                <Link exact to=\"/contact\">Contact</Link>\r\n                            </Nav.Link>\r\n                        </Nav.Item>\r\n                    </Nav>\r\n                </Container>\r\n            </Navbar>\r\n    )\r\n}","import React from 'react';\r\nimport { Container, Row, Col, Navbar } from 'react-bootstrap';\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <footer>\r\n            <Navbar bg=\"dark\" variant=\"dark\" fixed=\"bottom\"><p>Built using React JS and Bootstrap.</p></Navbar>           \r\n        </footer>\r\n    )\r\n}","import firebase from \"firebase\";\r\n\r\nimport \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBMZLBFHvEeye7we5piYInelL9zkXyfxQo\",\r\n  authDomain: \"movie-datatbase-demo.firebaseapp.com\",\r\n  databaseURL: \"https://movie-datatbase-demo.firebaseio.com\",\r\n  projectId: \"movie-datatbase-demo\",\r\n  storageBucket: \"movie-datatbase-demo.appspot.com\",\r\n  messagingSenderId: \"431962548751\",\r\n  appId: \"1:431962548751:web:ea3b7973cb8d896605517a\",\r\n  measurementId: \"G-CP7J4QTLR5\"\r\n};\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  export default firebase;","import React, { useState } from 'react';\r\nimport { Container, Col, Row, Form, Button } from 'react-bootstrap';\r\n\r\nimport firebase from '../firebase';\r\n\r\nexport default function Contact() {\r\n\r\n    const [validated, setValidated] = useState(false);\r\n    const [firstName, setFirstName] = useState('')\r\n    const [lastName, setLastName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [comments, setComments] = useState('')\r\n\r\n    const handleSubmit = e => {\r\n        const form = e.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n        }\r\n    \r\n        setValidated(true);\r\n        console.log(firstName, lastName, email, comments)\r\n        firebase\r\n        .firestore()\r\n        .collection(\"contact-suggestion-form\")\r\n            .add({\r\n                firstName,\r\n                lastName,\r\n                email,\r\n                comments\r\n            })\r\n            .then(() => {\r\n                setFirstName('');\r\n                setLastName('');\r\n                setEmail('');\r\n                setComments('');\r\n            })\r\n      };\r\n\r\n    return (\r\n        <Container>\r\n            <Row className=\"contact-form\">\r\n                <Col sm={12}>\r\n                <h2>Any feedback is welcomed!</h2>\r\n                <p>If you find any errors, let me know!</p>\r\n                    <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n                        <Form.Group controlId=\"formFirstName\">\r\n                        <Form.Label>First Name</Form.Label>\r\n                        <Form.Control type=\"input\" placeholder=\"First name\" value={firstName} onChange={e => setFirstName(e.currentTarget.value)}/>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formLastName\">\r\n                        <Form.Label>Last Name</Form.Label>\r\n                        <Form.Control type=\"input\" placeholder=\"Last name\" value={lastName} onChange={e => setLastName(e.currentTarget.value)}/>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formEmail\">\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control type=\"email\" placeholder=\"Enter Email\" value={email} onChange={e => setEmail(e.currentTarget.value)}/>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formText\">\r\n                        <Form.Label>Comments</Form.Label>\r\n                        <Form.Control type=\"textarea\" placeholder=\"Enter comments...\" value={comments} onChange={e => setComments(e.currentTarget.value)}/>\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\">Submit</Button>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Axios from 'axios';\r\nimport { Container, Row, Col, Form } from 'react-bootstrap';\r\n\r\nimport Poster from './modules/Poster';\r\nimport Results from './modules/Results';\r\n\r\n\r\nfunction Tvshows() {\r\n    const [movieData, setMovieData] = useState([]);\r\n    const [baseURL, setBaseURL] = useState([]);\r\n    const [searchBar, setSearchBar] = useState('');\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [noSearch, setNoSearch] = useState(false);\r\n\r\n    useEffect(() => {\r\n        Axios.get('https://api.themoviedb.org/3/discover/tv?api_key=ae6887d6afcef7f295ee5ce27afa2389&language=en-US&sort_by=popularity.desc&page=1&timezone=America%2FNew_York&include_null_first_air_dates=false')\r\n        .then((res) => setMovieData(res.data.results))\r\n        .catch(err => console.log)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        Axios.get('https://api.themoviedb.org/3/configuration?api_key=ae6887d6afcef7f295ee5ce27afa2389')\r\n            .then((res) => setBaseURL(res.data))\r\n    }, [])\r\n\r\n    function handleChange(e) {\r\n        e.preventDefault()\r\n        setSearchBar(e.target.value);\r\n    }\r\n\r\n    function submitSearch(e) {\r\n        e.preventDefault()\r\n        Axios.get(`https://api.themoviedb.org/3/search/movie?api_key=ae6887d6afcef7f295ee5ce27afa2389&language=en-US&query=${searchBar}&page=1&include_adult=false`)\r\n            .then((res) => {\r\n                setSearchResults(res.data.results)\r\n                setNoSearch(!noSearch)\r\n            })\r\n        // console.log(searchBarResult)\r\n    }\r\n\r\n    // console.log(movieData)\r\n    return (\r\n        <div>\r\n        <div class=\"jumbotron jumbotron-fluid\">\r\n            <div class=\"container\">\r\n                <h1 class=\"display-4\">Search for your favorite movies!</h1>\r\n                <Form inline={true}  onSubmit={submitSearch}>\r\n                        <Form.Group controlId=\"searchbar\">\r\n                            <Form.Control type=\"input\" placeholder=\"Search movies or TV shows.....\" value={searchBar} onChange={handleChange} />\r\n                            <Form.Control type=\"submit\" placeholder=\"Submit\"/>\r\n                        </Form.Group>\r\n                    </Form>\r\n            </div>\r\n        </div>\r\n            <Container>\r\n                <Row>\r\n                    {(!noSearch && movieData.map((movie) => <Col sm={12} md={4}>\r\n                                <Poster image={movie.backdrop_path} title={movie.title} rating={movie.vote_average}/>\r\n                                </Col>)) || (searchResults.map((search) => <Results date={search.release_date} text={search.original_title} img={`http://image.tmdb.org/t/p/w500${search.backdrop_path}`}/>))}\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tvshows;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport Home from './components/Home';\nimport Header from './components/modules/Header';\nimport Footer from './components/modules/Footer';\nimport Contact from './components/Contact';\n\nimport './App.scss';\nimport Results from './components/modules/Results';\nimport Tvshows from './components/Tvshows';\n\nfunction App() {\n  return (\n    <Router>\n    <Header />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/tvshows\" exact component={Tvshows} />\n        <Route path=\"/contact\" exact component={Contact} />\n        <Route path=\"/results\" exact component={Results} />\n      </Switch>\n      <Footer/>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}